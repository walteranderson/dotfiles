# enable mouse control
set -g mouse on
# 12-hour clock
set -g clock-mode-style 12
# increase the max character length of the left-side status line (so you can have a longer session name)
set -g status-left-length 20
# increase history limit
set -g history-limit 10000
# get rid of the activity bell
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
set -g monitor-activity off
set -g bell-action none
# don't rename windows automatically
set -g allow-rename off
# remove bg from status bar
set -g status-style bg=default
# highlight the currently active tab
set -g window-status-current-style reverse
# remove styling from active window (default value is reverse, which is what the current-style is being set to now)
set -g window-status-activity-style "none"
# status bar
set -g status-left ' [#{session_name}] :: '
set -g status-right '%r :: %F '
# reduce amount of time tmux waits after an escape key is pressed to determine if it is part of a key sequence. 
# suggestion from neovim
set -sg escape-time 10
# enables sending focus events to anything running within a tmux session
# suggestion from neovim
set -g focus-events on

# remap prefix to ctrl-a
unbind C-b
set -g prefix C-a
bind-key C-a send-prefix

# remap split panes
bind | split-window -h
bind - split-window -v
unbind '"'
unbind %

# remap to switch between the last two windows
bind-key C-a last-window
bind-key 'a' last-pane

# remap reload tmux config
bind r source-file ~/.config/tmux/tmux.conf

# remap kill session
bind-key \\ confirm-before -p "Kill session #S?" kill-session

# remap rename session
bind-key g command-prompt "rename-session %%"

bind-key f display-popup -E "tms"

# border colos
set -g pane-border-style fg=white
set -g pane-active-border-style "bg=default fg=white"

# Vim / Tmux split movement integration
# https://github.com/mrjones2014/smart-splits.nvim?tab=readme-ov-file#tmux
#
# '@pane-is-vim' is a pane-local option that is set by the plugin on load,
# and unset when Neovim exits or suspends; note that this means you'll probably
# not want to lazy-load smart-splits.nvim, as the variable won't be set until
# the plugin is loaded

# Smart pane switching with awareness of Neovim splits.
bind-key -n C-h if -F "#{@pane-is-vim}" 'send-keys C-h' 'select-pane -L'
bind-key -n C-j if -F "#{@pane-is-vim}" 'send-keys C-j' 'select-pane -D'
bind-key -n C-k if -F "#{@pane-is-vim}" 'send-keys C-k' 'select-pane -U'
bind-key -n C-l if -F "#{@pane-is-vim}" 'send-keys C-l' 'select-pane -R'

# Smart pane resizing with awareness of Neovim splits.
bind-key -n M-h if -F "#{@pane-is-vim}" 'send-keys M-h' 'resize-pane -L 5'
bind-key -n M-j if -F "#{@pane-is-vim}" 'send-keys M-j' 'resize-pane -D 5'
bind-key -n M-k if -F "#{@pane-is-vim}" 'send-keys M-k' 'resize-pane -U 5'
bind-key -n M-l if -F "#{@pane-is-vim}" 'send-keys M-l' 'resize-pane -R 5'
